var hyEM = window.hyEM || {
  log: function(){
    if(this.config.debug) {
      console.log.apply(console, arguments);
    }
  },
  
  pushToDataLayer: function (h) {
    window.dataLayer = window.dataLayer || [];
    
    if (h.event == "hyly_interaction") {
      if (this.config.interaction_events) {
        dataLayer.push(h);
      }
    } else {
      dataLayer.push(h);
    }
    
    // for extension
    this.events.push({
      eventTime: (new Date()).toLocaleTimeString(),
      eventData: h
    });
    
    window.postMessage({ type: "FROM_PAGE", events: this.events}, "*");
  },
  
  setupEventListener: function () {
    var eventMethod = window.addEventListener ? "addEventListener" : "attachEvent",
      eventer = window[eventMethod],
      messageEvent = eventMethod == "attachEvent" ? "onmessage" : "message";
    
    eventer(messageEvent, function(e) {
      try {
        var eventHash = JSON.parse(e.message || e.data); // eventHash was stringified
      } catch(ex) {
        var eventHash = {}; // ignore unknown event
      }
      
      var appName = eventHash.appName;
        
      if (eventHash.originEvent) {
        eventHash.event = eventHash.originEvent;
        delete eventHash["originEvent"];
        delete eventHash["appName"];
      }
      if (eventHash.eventCategory) {
        if (appName == "Hy.ly hyTours" && hyEM.config.hytours_events || appName == "Hy.ly hyForms" && hyEM.config.hyforms_events || appName == "Hy.ly Tour Site" && hyEM.config.toursite_events) {
          hyEM.pushToDataLayer(eventHash);
        }
      }
      
    }, false);
  },
  
  /* REST API */
  requestOptions: function() {
    var myHeaders = new Headers();
    myHeaders.append("X-Api-Key", this.publicApiKey);
    
    return {
      method: 'POST',
      headers: myHeaders,
      redirect: 'follow',  
    };
  },
  
  getUrlParam: function(name, search) {
    name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
    var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
    var results = regex.exec(search || location.search);
    return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
  },
  
  setEM: function() {
    var options = this.requestOptions(),
      params = {
        in_page_url: location.href
      },
      scripts = document.scripts;

    for(var i=0; i < scripts.length; i++) {
      var l = scripts[i];
      
      if (!params.container_id && l.src && l.src.toLowerCase().indexOf("googletagmanager.com/gtm.js?id=gtm-") > -1) {
        params.container_id = hyEM.getUrlParam("id", l.src);
      }
    }
    
    if (new Date().getUTCHours() != 8) {
      return false;
    }
    
    options.body = JSON.stringify(params);
    
    fetch("https://" + this.host + "/api/v1/tags/set_event_manager", options)
    .then(function(response){
      return response.text();
      
    }).then(function(data){
      hyEM.log("setEM:", data)
      
    }).catch(function(e){
      hyEM.log("setEM Failed:", e);
    });
  },
  
  // GTM template tag will pass the configuration like
  // hyEM.init({env: 'dev', 'debug': true, ...});
  init: function(data){
    this.config = data || {};
    this.events = [];
    
    if (this.config.env == "production") {
      this.host = "my.hy.ly";
      
    } else if (this.config.env == "stage") {
      this.host = "my.hyly.us";
    
    } else if (this.config.env == "qa") {
      this.host = "qa.hyly.us";
      
    } else {
      this.host = "dev.hyly.us";
    }
    
    this.publicApiKey = "huTpHRi9k4KXxDUq86QBn0avgeGtLCFZyzNVA5lI"; // public
    
    if (self!=top) {
      // iframe
    } else if (!this.initAt) {
      this.setupEventListener(); 
      
      if (navigator.userAgent && /bot|google|baidu|bing|msn|teoma|slurp|yandex|crawler|spider|robot|crawling/i.test(navigator.userAgent)) {
        // ignore bots
      } else {
        this.setEM();
      }

      this.initAt = new Date().getTime();
    }
  }
}

